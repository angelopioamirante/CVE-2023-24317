import sqlite3
import hashlib
import base64
import ast


def list_valid_users():
    db_connection = sqlite3.connect("localdb.sqlite")
    db_cursor = db_connection.cursor()

    query = "SELECT username FROM users WHERE privilege = ? OR privilege = ?"
    db_cursor.execute(
        query,
        (
            0,
            1,
        ),
    )

    row = db_cursor.fetchall()

    return row


def find_user(query_id):
    db_connection = sqlite3.connect("localdb.sqlite")
    db_cursor = db_connection.cursor()

    query = "SELECT * FROM users WHERE id = ?"
    db_cursor.execute(query, [query_id])

    row = db_cursor.fetchone()
    db_cursor.close()
    db_connection.close()

    return row


def handle_login(query_username, query_password):
    db_connection = sqlite3.connect("localdb.sqlite")
    db_cursor = db_connection.cursor()

    hash_pass = hashlib.sha256(query_password.encode("utf-8")).digest().hex()

    query = """
        SELECT * FROM users
        WHERE username = ?
        AND password = ?;
    """
    db_cursor.execute(
        query,
        (query_username, hash_pass),
    )

    row = db_cursor.fetchone()
    return row


def get_amount(from_user):
    db_connection = sqlite3.connect("localdb.sqlite")
    db_cursor = db_connection.cursor()

    query = "SELECT amount FROM users WHERE username = ?"
    db_cursor.execute(query, (from_user,))

    row = db_cursor.fetchone()
    return int(row[0])


def search_blacklist(whoami):
    db_connection = sqlite3.connect("localdb.sqlite")
    db_cursor = db_connection.cursor()

    query = "SELECT blacklist FROM users WHERE username = ?"
    db_cursor.execute(query, (whoami,))

    row = db_cursor.fetchone()
    return row[0]


def jwt_handler(jwt):
    header, body, signature = jwt.split(".")
    claims = b'{"fresh":False,' + base64.b64decode(body)[15:]
    check_jwt = ast.literal_eval(claims.decode("utf-8"))

    return check_jwt
